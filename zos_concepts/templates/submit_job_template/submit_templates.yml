###############################################################################
# Â© Copyright IBM Corporation 2023
###############################################################################

###############################################################################
# This playbook demonstrates how to use local Jinja2 templates to dynamically
# create JCL and submit jobs in z/OS using Red Hat Ansible Certified Content
# for IBM Z.
#
# Usage:
#  ansible-playbook -i <inventory> <playbook>
#
# Example:
#  ansible-playbook -i inventories submit_templates.yml
#
#  Additional variables and Jinja2 blocks can be added to the files found
#  in the files dir and this playbook. For more information about Jinja2,
#  see its official documentation at:
#  https://jinja.palletsprojects.com/en/3.0.x/templates/.
#
# Requirements:
#   IBM z/OS core collection 1.7.0 or later.
#
# Configure:
###############################################################################

- name: Sample zos_copy template playbook.
  hosts: zos_host
  collections:
    - "ibm.ibm_zos_core"
  gather_facts: false
  environment: '{{ environment_vars }}'

  vars:
    program_name: "UPTIME"
    cmd: "uptime"

  tasks:
    - name: Submit job using a local file.
      ibm.ibm_zos_core.zos_job_submit:
        src: template.j2
        location: LOCAL
        use_template: true
      register: job_output

    - name: Extracting ddnames from job output.
      set_fact:
        job_ddnames: "{{ job_output.jobs[0].ddnames }}"

    - name: See job's JCL.
      ansible.builtin.debug:
        msg: "{{ job_ddnames | selectattr('ddname', 'equalto', 'JESJCL') }}"

    - name: See job output.
      ansible.builtin.debug:
        msg: "{{ job_ddnames | selectattr('ddname', 'equalto', 'STDOUT') }}"
