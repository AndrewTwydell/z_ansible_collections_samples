---
- hosts: all
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
  vars:
    is_ping: true
    is_uss: true
    is_hfs: true
    is_pds: true
    is_pds_member: true
  environment: "{{ environment_vars }}"
  tasks:
    # Ping the host
    - name: Ping host {{ inventory_hostname }}
      ping:
      register: result
      when: is_ping
    - name: Response
      debug:
        msg: "{{ result.ping }}"
      when: is_ping
    - name: Fetch file from USS from host {{ inventory_hostname }}
      zos_fetch:
        src: /etc/ssh/ssh_config
        dest: /tmp/
        flat: true
      register: result
      when: is_uss
    - name: Response
      debug:
        msg: "{{ result }}"
      when: is_uss
    ## This one currently fails but it should not , HFS is data set type PO
    # - name: Fetch data set type HFS from host {{ inventory_hostname }}
    #   zos_fetch:
    #     src: IMSTESTU.AUTOSRVR.HFS
    #     dest: /tmp/
    #     flat: true
    #     use_qualifier: false
    #   register: result
    #   when: is_hfs
    # - name: Response
    #   debug:
    #     msg: "{{ result }}"
    #   when: is_hfs
    - name: Fetch a PDS as binary and store in /tmp/USER.PRIVATE.PROCLIB
      zos_fetch:
        src: USER.LOADLIB
        dest: /tmp/
        flat: true
        is_binary: true
      register: result
      when: is_pds
    - name: Response
      debug:
        msg: "{{ result }}"
      when: is_pds
    - name: Fetch a PDS member named 'DBDGEN' from data set USER.PRIVATE.PROCLIB
      zos_fetch:
        src: USER.LOADLIB(NCPTC)
        dest: /tmp/zosfetch/
        flat: true
        is_binary: true
      register: result
      when: is_pds_member
    - name: Response
      debug:
        msg: "{{ result }}"
      when: is_pds_member
